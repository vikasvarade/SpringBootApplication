server.port=8085
spring.application.name=booking-service

# eureka.client.serviceUrl.defaultZone = http://localhost:8761/eureka

spring.datasource.url = jdbc:mysql://localhost:3306/bookingschema?useSSL=false

# Username and password
spring.datasource.username = root
spring.datasource.password = root

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# To insert data into database on startup if the database is other than H2, HSQLDB
# spring.datasource.initialization-mode=always


# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Liquibase
spring.liquibase.enabled=true
spring.liquibase.change-log=classpath:/data/db-master.xml